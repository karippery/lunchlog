name: Django CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DJANGO_SETTINGS_MODULE: config.settings.dev
  DJANGO_SECRET_KEY: dummy
  POSTGRES_DB: test_db
  POSTGRES_USER: test_user
  POSTGRES_PASSWORD: testpass
  REDIS_URL: redis://localhost:6379/0
  DATABASE_URL: postgres://test_user:testpass@localhost:5432/test_db
  REDIS_HOST: redis
  REDIS_PORT: 6379
  CELERY_BROKER_URL: redis://redis:6379/0
  CELERY_RESULT_BACKEND: redis://redis:6379/0
  CELERY_TIMEZONE: UTC
  CELERY_TASK_TRACK_STARTED: "True"
  CELERY_TASK_TIME_LIMIT: "1800"
  GOOGLE_PLACES_API_KEY: your-google-places-api-key-here
  GOOGLE_PLACES_TEXT_SEARCH_URL: https://places.googleapis.com/v1/places:searchText
  AWS_ACCESS_KEY_ID: minioadmin
  AWS_SECRET_ACCESS_KEY: minioadmin
  AWS_STORAGE_BUCKET_NAME: my-bucket
  AWS_S3_ENDPOINT_URL: http://minio:9000

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
      with:
        path: .

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gdal-bin libgdal-dev    

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gdal-bin libgdal-dev    

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"

    - name: Install Poetry
      run: pip install poetry

    - name: Configure Poetry
      run: poetry config virtualenvs.create false

    - name: Install dependencies
      run: poetry install --no-interaction

    - name: Wait for services
      run: |
        until pg_isready -h localhost -U $POSTGRES_USER; do
          echo "Waiting for postgres..."
          sleep 2
        done

    - name: Run migrations
      run: poetry run python manage.py migrate

    - name: Run tests
      run: poetry run pytest -k "not test_create_receipt_with_image_file"
