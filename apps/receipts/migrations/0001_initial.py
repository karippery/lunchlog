# Generated by Django 5.2.4 on 2025-07-23 12:48

import apps.receipts.models
import config.storage_backends
import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of the receipt in decimal format', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('address', models.TextField()),
                ('is_processed', models.BooleanField(default=False)),
                ('restaurant', models.TextField()),
                ('image', models.ImageField(blank=True, help_text='Receipt image file', null=True, storage=config.storage_backends.ReceiptImageStorage(), upload_to=apps.receipts.models.receipt_image_path)),
                ('image_url', models.URLField(blank=True, max_length=1024, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-created_at'],
                'indexes': [models.Index(fields=['user', 'date'], name='receipts_re_user_id_e5545c_idx'), models.Index(fields=['date'], name='receipts_re_date_af6f9c_idx'), models.Index(fields=['user', '-date'], name='receipts_re_user_id_439f7e_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='price_positive'), models.CheckConstraint(condition=models.Q(('image__isnull', False), ('image_url__isnull', False), _connector='OR'), name='image_or_url_required')],
            },
        ),
    ]
